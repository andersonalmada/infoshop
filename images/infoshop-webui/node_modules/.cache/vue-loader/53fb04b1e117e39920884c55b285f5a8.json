{"remainingRequest":"/home/almada/hello2/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/home/almada/hello2/src/views/Home2.vue?vue&type=template&id=61a2c82e","dependencies":[{"path":"/home/almada/hello2/src/views/Home2.vue","mtime":1629941672858},{"path":"/home/almada/hello2/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1624994109000},{"path":"/home/almada/hello2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/almada/hello2/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js","mtime":1624994108000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgSWQ6IDxpbnB1dCB0eXBlPSJ0ZXh0IiBuYW1lPSIiIGlkPSIwIiB2LW1vZGVsPSJpZCIgLz4gPGJyIC8+CiAgTmFtZTogPGlucHV0IHR5cGU9InRleHQiIG5hbWU9IiIgaWQ9IjEiIHYtbW9kZWw9Im5hbWUiIC8+IDxiciAvPgogIFByaWNlOiA8aW5wdXQgdHlwZT0idGV4dCIgbmFtZT0iIiBpZD0iMiIgdi1tb2RlbD0icHJpY2UiIC8+IDxiciAvPgoKICB7eyBwb3N0IH19IDxiciAvPgoKICA8YnV0dG9uIEBjbGljaz0iZGVsZXRlUG9zdHMiPkRlbGV0YXIgUG9zdDwvYnV0dG9uPgogIDxidXR0b24gQGNsaWNrPSJwdXRQb3N0cyI+QXR1YWxpemFyIFBvc3Q8L2J1dHRvbj4KICA8YnV0dG9uIEBjbGljaz0iaW5zZXJpclBvc3RzIj5JbnNlcmlyIFBvc3Q8L2J1dHRvbj4KICA8YnV0dG9uIEBjbGljaz0iZmV0Y2hQb3N0cyI+QnVzY2FyIFBvc3RzPC9idXR0b24+CiAgPGJ1dHRvbiBAY2xpY2s9ImZldGNoQnlJZFBvc3RzIj5CdXNjYXIgUG9zdDwvYnV0dG9uPgogIDx1bD4KICAgIDxsaSB2LWZvcj0icG9zdCBpbiBwb3N0cyIgOmtleT0icG9zdC5pZCI+CiAgICAgIElkOiB7eyBwb3N0LmlkIH19IDxiciAvPgogICAgICBOYW1lOiB7eyBwb3N0Lm5hbWUgfX0gPGJyIC8+CiAgICAgIFByaWNlOiB7eyBwb3N0LnByaWNlIH19IDxiciAvPgogICAgPC9saT4KICA8L3VsPgogIEZpbGU6CiAgPGlucHV0IHR5cGU9ImZpbGUiIGlkPSJmaWxlIiByZWY9ImZpbGUiIG5hbWU9ImltYWdlIiAvPgogIDxiciAvPgoKICA8aW1nCiAgICB2LWlmPSJwb3N0LmlkIgogICAgOnNyYz0iCiAgICAgICdodHRwczovL2FsbWFkYS1wcm9kdWN0LWFwaS5oZXJva3VhcHAuY29tL3VwbG9hZHMvcHJvZHVjdHMvJyArCiAgICAgICAgcG9zdC5pZCArCiAgICAgICAgJz8nICsKICAgICAgICBNYXRoLnJhbmRvbSgpCiAgICAiCiAgICB3aWR0aD0iMjAwIgogICAgaGVpZ2h0PSIxNTAiCiAgICBhbHQ9Ik5hZGEiCiAgICBzcmNzZXQ9IiIKICAvPgo="},{"version":3,"sources":["/home/almada/hello2/src/views/Home2.vue"],"names":[],"mappings":";EACE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC;EAC3D,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC;EAC/D,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC;;EAEjE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC;;EAEhB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACjD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAChD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAClD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAChD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACnD,CAAC,CAAC,CAAC;IACD,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACtC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC;MACvB,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC;MAC3B,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC;IAC/B,CAAC,CAAC,CAAC,CAAC;EACN,CAAC,CAAC,CAAC,CAAC;EACJ,CAAC,CAAC,CAAC,CAAC;EACJ,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;EACtD,CAAC,CAAC,EAAE,CAAC;;EAEL,CAAC,CAAC,CAAC;IACD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACb,CAAC,CAAC,CAAC,CAAC,CAAC;MACH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;QAC3D,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;QACR,CAAC,CAAC,EAAE;QACJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAChB;IACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACV,CAAC","file":"/home/almada/hello2/src/views/Home2.vue","sourceRoot":"","sourcesContent":["<template>\n  Id: <input type=\"text\" name=\"\" id=\"0\" v-model=\"id\" /> <br />\n  Name: <input type=\"text\" name=\"\" id=\"1\" v-model=\"name\" /> <br />\n  Price: <input type=\"text\" name=\"\" id=\"2\" v-model=\"price\" /> <br />\n\n  {{ post }} <br />\n\n  <button @click=\"deletePosts\">Deletar Post</button>\n  <button @click=\"putPosts\">Atualizar Post</button>\n  <button @click=\"inserirPosts\">Inserir Post</button>\n  <button @click=\"fetchPosts\">Buscar Posts</button>\n  <button @click=\"fetchByIdPosts\">Buscar Post</button>\n  <ul>\n    <li v-for=\"post in posts\" :key=\"post.id\">\n      Id: {{ post.id }} <br />\n      Name: {{ post.name }} <br />\n      Price: {{ post.price }} <br />\n    </li>\n  </ul>\n  File:\n  <input type=\"file\" id=\"file\" ref=\"file\" name=\"image\" />\n  <br />\n\n  <img\n    v-if=\"post.id\"\n    :src=\"\n      'https://almada-product-api.herokuapp.com/uploads/products/' +\n        post.id +\n        '?' +\n        Math.random()\n    \"\n    width=\"200\"\n    height=\"150\"\n    alt=\"Nada\"\n    srcset=\"\"\n  />\n</template>\n\n<script>\nimport axios from \"axios\";\n\nexport default {\n  name: \"Home\",\n  data() {\n    return {\n      id: \"\",\n      userId: \"\",\n      price: \"\",\n      name: \"\",\n      posts: [],\n      post: \"\",\n      baseURI: \"https://almada-product-api.herokuapp.com/products\",\n      baseUpload: \"https://almada-product-api.herokuapp.com/upload\",\n    };\n  },\n  methods: {\n    handleFileUpload(id) {\n      this.file = this.$refs.file.files[0];\n\n      let obj = {\n        resource: \"products\",\n        id: id,\n      };\n      let json = JSON.stringify(obj);\n\n      let form = new FormData();\n      form.append(\"obj\", json);\n      form.append(\"file\", this.file);\n\n      console.log(form.getAll(\"file\"));\n\n      axios\n        .post(this.baseUpload, form, {\n          headers: {\n            \"Content-Type\": \"multipart/form-data\",\n          },\n        })\n        .then((result) => {\n          console.log(result);\n        });\n    },\n    fetchPosts: function() {\n      axios.get(this.baseURI).then((result) => {\n        console.log(result);\n        this.posts = result.data;\n      });\n    },\n    fetchByIdPosts: function() {\n      axios.get(this.baseURI + \"/\" + this.id).then((result) => {\n        console.log(result);\n        this.post = result.data;\n      });\n    },\n    inserirPosts: function() {\n      this.handleFileUpload(1);\n      /*\n      axios\n        .post(this.baseURI, {\n          name: this.name,\n          price: this.price,\n        })\n        .then((result) => {\n          if (result.status == 201) {\n            alert(\"Inserido com sucesso !!\");\n            this.handleFileUpload(result.data.id);\n          }\n        })\n        .catch((error) => {\n          if (error.response.status == 400) {\n            alert(\"Dados incorretos !!\");\n          } else {\n            alert(\"Problema desconhecido !!\");\n          }\n        });\n        */\n    },\n    putPosts: function() {\n      axios\n        .put(this.baseURI + \"/\" + this.id, {\n          name: this.name,\n          price: this.price,\n        })\n        .then((result) => {\n          console.log(result.data);\n          this.handleFileUpload(result.data.id);\n        });\n    },\n    deletePosts: function() {\n      axios.delete(this.baseURI + \"/\" + this.id).then((result) => {\n        console.log(result);\n      });\n    },\n  },\n  created() {\n    if (localStorage.getItem(\"user\")) {\n      console.log(\"OK\");\n    } else {\n      this.$router.push(\"/\");\n    }\n  },\n};\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n</style>\n"]}]}